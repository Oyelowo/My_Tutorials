//import { Observable } from "rxjs/Observable";
import { Observer, fromEvent, Observable, ReplaySubject, Subject, AsyncSubject } from "rxjs";
//import "rxjs/add/operator/share";

// AsnycSubject: only last value is sent to the observer

const addItem = (item: any) => {
  const node = document.createElement("li");
  const textNode = document.createTextNode(item);
  node.appendChild(textNode);
  document.getElementById("output").appendChild(node);
};

const subject = new AsyncSubject();

subject.subscribe(
  data => addItem("Observer 1: Â´" + data),
  () => addItem("Observer 1 Completed")
);

let i = 1;
const int = setInterval(() => subject.next(i++), 100);

let observer2;
setTimeout(() => {
    observer2 = subject.subscribe(
        data => addItem('Observer 2: ' + data)
    )
    subject.complete();
    
}, 500);
